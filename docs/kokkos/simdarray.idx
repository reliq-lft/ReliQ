nimTitle	simdarray	kokkos/simdarray.html	module kokkos/simdarray		0
nim	SIMDArray	kokkos/simdarray.html#SIMDArray	object SIMDArray		37
nim	newSIMDArray	kokkos/simdarray.html#newSIMDArray,typedesc	proc newSIMDArray(T: typedesc): SIMDArray[T]		45
nim	newSIMDArray	kokkos/simdarray.html#newSIMDArray,T	proc newSIMDArray[T](value: T): SIMDArray[T]		46
nim	newSIMDArray	kokkos/simdarray.html#newSIMDArray,SIMDArray[T]	proc newSIMDArray[T](other: SIMDArray[T]): SIMDArray[T]		48
nim	newSIMDArray	kokkos/simdarray.html#newSIMDArray,seq[T]	proc newSIMDArray[T](values: seq[T]): SIMDArray[T]		50
nim	newSIMDArray	kokkos/simdarray.html#newSIMDArray,openArray[T]	proc newSIMDArray[T](values: openArray[T]): SIMDArray[T]		59
nim	width	kokkos/simdarray.html#width,SIMDArray[T]	proc width[T](simd: SIMDArray[T]): int		62
nim	`[]`	kokkos/simdarray.html#[],SIMDArray[T],int	proc `[]`[T](simd: SIMDArray[T]; lane: int): T		65
nim	`[]=`	kokkos/simdarray.html#[]=,SIMDArray[T],int,T	proc `[]=`[T](simd: var SIMDArray[T]; lane: int; value: T)		66
nim	`=copy`	kokkos/simdarray.html#=copy,SIMDArray[T],SIMDArray[T]	proc `=copy`[T](x: var SIMDArray[T]; y: SIMDArray[T])		74
nim	`:=`	kokkos/simdarray.html#:=,SIMDArray[T],T	proc `:=`[T](x: var SIMDArray[T]; value: T)		78
nim	load	kokkos/simdarray.html#load,SIMDArray[T],ptr.T	proc load[T](x: var SIMDArray[T]; mem: ptr T)		85
nim	store	kokkos/simdarray.html#store,SIMDArray[T],ptr.T	proc store[T](x: SIMDArray[T]; mem: ptr T)		89
nim	`:=`	kokkos/simdarray.html#:=,SIMDArray[T],SIMDArray[T]	proc `:=`[T](x: var SIMDArray[T]; value: SIMDArray[T])		93
nim	`+`	kokkos/simdarray.html#+,SIMDArray[T],SIMDArray[T]	proc `+`[T](a, b: SIMDArray[T]): SIMDArray[T]		100
nim	`-`	kokkos/simdarray.html#-,SIMDArray[T],SIMDArray[T]	proc `-`[T](a, b: SIMDArray[T]): SIMDArray[T]		101
nim	`*`	kokkos/simdarray.html#*,SIMDArray[T],SIMDArray[T]	proc `*`[T](a, b: SIMDArray[T]): SIMDArray[T]		102
nim	`/`	kokkos/simdarray.html#/,SIMDArray[T],SIMDArray[T]	proc `/`[T](a, b: SIMDArray[T]): SIMDArray[T]		103
nim	`+=`	kokkos/simdarray.html#+=,SIMDArray[T],SIMDArray[T]	proc `+=`[T](a: SIMDArray[T]; b: SIMDArray[T])		106
nim	`-=`	kokkos/simdarray.html#-=,SIMDArray[T],SIMDArray[T]	proc `-=`[T](a: SIMDArray[T]; b: SIMDArray[T])		107
nim	`*=`	kokkos/simdarray.html#*=,SIMDArray[T],SIMDArray[T]	proc `*=`[T](a: SIMDArray[T]; b: SIMDArray[T])		108
nim	`/=`	kokkos/simdarray.html#/=,SIMDArray[T],SIMDArray[T]	proc `/=`[T](a: SIMDArray[T]; b: SIMDArray[T])		109
nim	`+=`	kokkos/simdarray.html#+=,SIMDArray[T],T	proc `+=`[T](a: SIMDArray[T]; b: T)		112
nim	`-=`	kokkos/simdarray.html#-=,SIMDArray[T],T	proc `-=`[T](a: SIMDArray[T]; b: T)		113
nim	`*=`	kokkos/simdarray.html#*=,SIMDArray[T],T	proc `*=`[T](a: SIMDArray[T]; b: T)		114
nim	`/=`	kokkos/simdarray.html#/=,SIMDArray[T],T	proc `/=`[T](a: SIMDArray[T]; b: T)		115
nim	values	kokkos/simdarray.html#values.i,SIMDArray[T]	iterator values[T](a: SIMDArray[T]): T		118
nim	toSIMDArray	kokkos/simdarray.html#toSIMDArray,seq[T]	proc toSIMDArray[T](values: seq[T]): SIMDArray[T]		122
nim	toSIMDArray	kokkos/simdarray.html#toSIMDArray,openArray[T]	proc toSIMDArray[T](values: openArray[T]): SIMDArray[T]		123
nim	toSeq	kokkos/simdarray.html#toSeq,SIMDArray[T]	proc toSeq[T](a: SIMDArray[T]): seq[T]		126
nim	`$`	kokkos/simdarray.html#$,SIMDArray[T]	proc `$`[T](a: SIMDArray[T]): string		131
nim	numLanes	kokkos/simdarray.html#numLanes	proc numLanes(): int		133
nimgrp	+=	kokkos/simdarray.html#+=-procs-all	proc		106
nimgrp	newsimdarray	kokkos/simdarray.html#newSIMDArray-procs-all	proc		45
nimgrp	:=	kokkos/simdarray.html#:=-procs-all	proc		78
nimgrp	-=	kokkos/simdarray.html#-=-procs-all	proc		107
nimgrp	tosimdarray	kokkos/simdarray.html#toSIMDArray-procs-all	proc		122
nimgrp	/=	kokkos/simdarray.html#/=-procs-all	proc		109
nimgrp	*=	kokkos/simdarray.html#*=-procs-all	proc		108
